#pragma config(Sensor, S1,     sen1,           sensorSoundDB)
#pragma config(Sensor, S2,     sen2,           sensorSONAR)
#pragma config(Motor,  motorA,          mot1,          tmotorNXT, PIDControl, encoder)
#pragma config(Motor,  motorB,          mot2,          tmotorNXT, PIDControl, encoder)
#pragma config(Motor,  motorC,          mot3,          tmotorNXT, PIDControl, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

void obstacle()                      //This function is used to detect obstacles in the way and change its direction
{
	int q = 10;// This gives the distance for the sonar sensor in cms
	while (SensorValue(sen1)<q)//If an obstacle comes into the sensor's range
	{
		motor[mot1] = 0;// It will stop this motor
		motor[mot2] = 0;
		motor[mot3] = 100;// This motor will move in the opposite direction with a speed of 60, which will turn the robot
		wait1Msec(1000);
		motor[mot3] = -100;
		wait1Msec(1000);

	}

}

task main()
{
	while (true)// Runs an infinite loop
	{
		wait1Msec(1000);// This is a delay which tells the robot to wait 1 second before executing the next line so that the program runs smoothly
		while (SensorValue(s2)<50)// S2 is the sound sensor. As long as it there is no sound, the motors will not move
		{
			motor[mot1] = 0;
			motor[mot2] = 0;
			motor[mot3] = 0;
		}
		//If the above condition becomes false, that is, the sensor hears a sound, the motors will start moving forward
		motor[mot1] = 50;
		motor[mot2] = 50;
		motor[mot3] = 50;
		wait1Msec(2000);
		// The motors are running at this point and the bot is moving forward
		while (true)
		{
			if (SensorValue(s2)>50)// If the robot hears a sound, then both the motors will stop and go back to the top
			{
				motor[mot1] = 0;
				motor[mot2] = 0;
				motor[mot3] = 0;
				break;
			}
			else// The motors will keep moving
			{
				motor[mot1] = 50;
				motor[mot2] = 50;
				motor[mot3] = 50;
				obstacle();//Calls the obstacle function which detects any obstacle in its way
			}
		}
	}
